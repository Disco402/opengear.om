#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for om_services
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.0',
    'status': ['preview'],
    'supported_by': 'opengear'
}

DOCUMENTATION = """
---
module: om_services
version_added: 1.0.0
short_description: 'Manages services attributes of om services'
description: 'Manages services attributes of om services.'
author: Adrian Van Katwyk
options:
  config:
    description: The provided configuration
    type: dict
    suboptions:
      https:
        type: dict
        suboptions:
          csr:
            type: dict
            suboptions:
              common_name:
                type: str
              org_unit:
                type: str
              organization:
                type: str
              locality:
                type: str
              state:
                type: str
              country:
                type: str
              email:
                type: str
              key_length:
                type: str
              csr:
                type: str
              challenge_password:
                type: str
              private_key:
                type: string
          cert:
            type: str
      ntp:
        type: dict
        suboptions:
          enabled:
            type: bool
          servers:
            type: list
            suboptions:
              value:
                type: str
      lldp:
        type: dict
        suboptions:
          enabled:
            type: bool
          description:
            type: str
          platform:
            type: str
          physifs:
            type: str
      snmp_manager:
        type: dict
        suboptions:
          protocol:
            type: str
          address:
            type: str
          port:
            type: int
          msg_type:
            type: str
          version:
            type: str
          community:
            type: str
          auth_protocol:
            type: str
          auth_password:
            type: str
          username:
            type: str
          engine_id:
            type: str
          privacy_protocol:
            type: str
          privacy_password:
            type: str
          security_level:
            type: str
      snmpd:
        type: dict
        suboptions:
          enabled:
            type: bool
          port:
            type: int
          protocol:
            type: str
          enable_legacy_versions:
            type: bool
          rocommunity:
            type: str
          rwcommunity:
            type: str
          enable_secure_snmp:
            type: bool
          security_level:
            type: str
          security_name:
            type: str
          engine_id:
            type: str
          auth_protocol:
            type: str
          auth_use_plaintext:
            type: str
          auth_password:
            type: str
          auth_localized_key:
            type: str
          priv_protocol:
            type: str
          priv_use_plaintext:
            type: bool
          priv_password:
            type: str
          priv_localized_key:
            type: str
      ssh:
        type: dict
        suboptions:
          ssh_url_delimiter:
            type: str
          maxstartups_start:
            type: int
          min_startups_rate:
            type: int
          maxstartups_full:
            type: int
          unauthenticated_serial_port_access:
            type: bool
      routing:
        type: dict
        suboptions:
          bgpd:
            description: Configuration for the bgp routing daemon.
            type: dict
            suboptions:
              enabled:
                type: bool
          ospfd:
            description: Configuration for the ospf routing daemon.
            type: dict
            suboptions:
              enabled:
                type: bool
          isisd:
            description: Configuration for the isis routing daemon.
            type: dict
            suboptions:
              enabled:
                type: bool
          ripd:
            description: Configuration for the rip routing daemon.
            type: dict
            suboptions:
              enabled:
                type: bool
      syslog:
        type: list
        elements: dict
        suboptions:
          id:
            type: str
          port:
            type: int
          protocol:
            type: str
          address:
            type: str
          description:
            type: str
          port_logging_enabled:
            type: bool
          min_severity:
            type: str
      snmp_alert_managers:
        type: list
        elements: dict
        suboptions:
          id:
            type: str
          multi_field_identifer:
            type: str
          name:
            type: str
          protocol:
            type: str
          address:
            type: str
          port:
            type: int
          msg_type:
            type: str
          version:
            type: str
          community:
            type: str
          auth_protocol:
            type: str
          auth_password:
            type: str
          username:
            type: str
          engine_id:
            type: str
          privacy_protocol:
            type: str
          privacy_password:
            type: str
          security_level:
            type: str
  state:
    description:
    - The state of the configuration after module completion.
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    - gathered
    - rendered
    default: merged
"""
EXAMPLES = """
# Using deleted

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  myos_interfaces:
    operation: deleted

<placeholder for the configuration example after module invocation>


# Using merged

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible'
        enable: False
    operation: merged

<placeholder for the configuration example after module invocation>


# Using overridden

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  myos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible'
        enable: False
    operation: overridden

<placeholder for the configuration example after module invocation>


# Using replaced

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible'
        enable: False
    operation: replaced

<placeholder for the configuration example after module invocation>


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.opengear.om.plugins.module_utils.network.om.argspec.services.services import ServicesArgs
from ansible_collections.opengear.om.plugins.module_utils.network.om.config.services.services import Services


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=ServicesArgs.argument_spec,
                           supports_check_mode=True)

    result = Services(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
